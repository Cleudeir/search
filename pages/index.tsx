/* eslint-disable @typescript-eslint/no-unused-vars */
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from 'react'
import CardMovie from '../components/CardMovie'
import { Data, DataTv } from '../components/interfaces'
import { DataMovie } from './../components/interfaces'
import CardTv from '../components/CardTv'

async function getData (): Promise<Data> {
  const data = await fetch('/api/map')
  return await data.json()
}

export default function Home (): JSX.Element {
  const [data, setData] = useState(null)
  const [text, setText] = useState('')
  const [searchMovie, setSearchMovie] = useState([])
  const [searchTv, setSearchTv] = useState([])
  useEffect(() => {
    void (async (): Promise<void> => {
      const _data = await getData()
      console.log(_data)
      setData(_data)
    })()
  }, [])

  function filterDataMovie (): void {
    const filter = data.movie.filter((
      item: { title: string | string[] }) => item.title.includes(text)).slice(0, 5)
    setSearchMovie(filter)
  }

  function filterDataTV (): void {
    setSearchTv(
      data.tv.filter((
        item: { title: string | string[] }) => item.title.includes(text)).slice(0, 5)
    )
  }

  return (
    data && (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <div>
          <input
            type="text"
            value={text}
            onChange={(e) => { setText(e.target.value) }}
          />
          <button onClick={filterDataMovie}>search</button>
          </div>
          <div className={styles.movies}>
            <h2> {data.movie.length} movies available</h2>
            {searchMovie.length > 0 &&
              searchMovie.map((item: DataMovie) => (
                <CardMovie type="movie" item={item} key={item.title} />
              ))}
          </div>
          <div className={styles.movies}>
            <h2>{data.tv.length} tv available</h2>
            {searchTv.length > 0 &&
              searchTv.map((item: DataTv) => (
                <CardTv item={item} type="tv" key={item.url} />
              ))}
          </div>
        </main>
      </>
    )
  )
}
