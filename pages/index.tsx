/* eslint-disable @typescript-eslint/no-unused-vars */
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from 'react'
import { Data, DataTv } from '../components/interfaces'
import Movie from './movie'
import Tv from './tv'
import Header from './Header'

async function getData (url): Promise<Data> {
  const data = await fetch(url)
  return await data.json()
}

export default function Home (): JSX.Element {
  const [data, setData] = useState(null)
  const [search, setSearch] = useState([])
  const [type, setType] = useState(true)
  useEffect(() => {
    void (async (): Promise<void> => {
      let _data = []
      if (type) {
        _data = await getData('/api/mapMovie')
      } else {
        _data = await getData('/api/mapTv')
      }
      console.log(_data)
      setData(_data)
      const number = Math.floor(Math.random() * _data.length)
      console.log(number)
      setSearch(_data.slice(number, number + 6))
    })()
  }, [type])

  function filterData (text): void {
    if (type) {
      const filter = data
        .filter((item: { title: string }) =>
          (item.title.toLowerCase()).includes(text.toLowerCase())
        )
        .slice(0, 6)
      setSearch(filter)
    } else {
      const filter = data
        .filter((item: { title: string }) =>
          (item.title.toLowerCase()).includes(text.toLowerCase())
        )
        .slice(0, 6)
      setSearch(filter)
    }
  }
  return (
    data && (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <Header
            data={data}
            filterData={filterData}
            type={type}
            setType={setType}
          />
          {type && <Movie data={data} search={search} />}
          {!type && <Tv data={data} search={search} />}
        </main>
      </>
    )
  )
}
