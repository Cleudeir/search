import Head from 'next/head';
import styles from '../styles/Home.module.css';
import React, {useEffect, useState} from 'react';

type DataMovie = {
	id: number;
	url: string;
	title: string;
	quality: string;
	year: string;
	dub: boolean;
};
type episode = {
	id: number;
	url: string;
	title: string;
};
type DataTv = {
	id: number;
	url: string;
	episodes: episode[];
};

async function getData() {
	const data = await fetch('/api/map');
	return data.json();
}

async function getInfo({item, type}) {
	const data = await fetch('/api/info', {
		method: 'POST',
		body: JSON.stringify({item, type}),
		headers: {"Content-type": 'application/json; charset=UTF-8' },
	});
	return data.json();
}

export default function Home() {
	const [data, setData] = useState(null);
	const [text, setText] = useState('');
	const [searchMovie, setSearchMovie] = useState([]);
	const [searchTv, setSearchTv] = useState([]);
	useEffect(() => {
		(async () => {
			const _data = await getData();
			console.log(_data);
			setData(_data);
		})();
	}, []);

	function Card({item, type}) {
		const [_data, _setData] = useState<DataTv | undefined>(null);
		return (
			<div>
				<button
					onClick={async () => {
						const _get = await getInfo({item, type});
						console.log(_get);
						if (type === 'tv') {
							_setData(_get);
						}
					}}
					type="button"
				>
					{item.title}
				</button>
				{_data != null &&
          _data.episodes.map((ep) => (
          	<div key={ep.url}>
          		<h2>{ep.title}</h2>
          		{
          			// <iframe name='Player' src={'https://sinalpublico.com'+ ep.url} frameBorder='0' height='400' width='640' allowFullScreen> </iframe>
          		}
          	</div>
          ))}
			</div>
		);
	}

	return (
		data && (
			<>
				<Head>
					<title>Create Next App</title>
					<meta name="description" content="Generated by create next app" />
					<meta name="viewport" content="width=device-width, initial-scale=1" />
					<link rel="icon" href="/favicon.ico" />
				</Head>
				<main className={styles.main}>
					<input
						type="text"
						value={text}
						onChange={(e) => {
							setText(e.target.value);
							setSearchMovie(
								data.movie
									.filter((item: {title: string | string[]}) =>
										item.title.includes(e.target.value),
                  )
									.slice(0, 10),
              );
							setSearchTv(
								data.tv
									.filter((item: {title: string | string[]}) =>
										item.title.includes(e.target.value),
                  )
									.slice(0, 10),
              );
						}}
					/>
					<div className={styles.movies}>
						<h2>Movies</h2>
						{searchMovie.length > 0 &&
              searchMovie.map((item: {title: string}) => (
              	<Card type="movie" item={item} key={item.title} />
              ))}
					</div>
					<div className={styles.movies}>
						<h2>Tv</h2>
						{searchTv.length > 0 &&
              searchTv.map((item: {title: string}) => (
              	<Card item={item} type="tv" key={item.title} />
              ))}
					</div>
				</main>
			</>
		)
	);
}
